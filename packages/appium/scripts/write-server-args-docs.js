#!/usr/bin/env node
/* eslint-disable no-console */

// @ts-check

const {writeFileSync} = require('fs');
const path = require('path');
let parser;
try {
  parser = require('../build/lib/cli/parser.js');
} catch {
  console.error('Could not load parser CLI file; please execute `npm run build`');
  process.exit(1);
}

/** @type {import('../lib/cli/args').ArgumentDefinitions} */
const appiumArguments = parser.getParser().rawArgs;
const docFile = path.normalize(
  path.join(__dirname, '..', '..', '..', 'docs', 'en', 'writing-running-appium', 'server-args.md')
);
let md = `
<!-- THIS FILE IS AUTO-GENERATED BY scripts/write-server-args-docs.js; DO NOT EDIT -->
# Appium server arguments

Many Appium 1.5 server arguments have been deprecated in favor of the [--default-capabilities flag](/docs/en/writing-running-appium/default-capabilities-arg.md).

Usage: \`node . [flags]\`

## Server Flags

All flags are optional, but some are required in conjunction with certain others.

<expand_table>

|Flag|Default|Description|Example|
|----|-------|-----------|-------|
`;
appiumArguments.forEach(function handleArguments(argOpts, argNames) {
  // handle empty objects
  if (JSON.stringify(argOpts.default) === '{}') {
    argOpts.default = '{}';
  }

  md += '|`' + argNames.join('`, `') + '`';
  md += '|' + (typeof argOpts.default === 'undefined' ? '' : argOpts.default);
  md += '|' + argOpts.help;
  md += '|';
  md += '|\n';
});

try {
  writeFileSync(docFile, md);
  console.error(
    'New docs written! Do not forget to commit:\ngit add -A %s && git commit -m "Update %s"',
    path.relative(process.cwd(), docFile),
    path.basename(docFile)
  );
} catch (err) {
  console.error('Could not write to file %s: %s', docFile, err);
  process.exitCode = 1;
}
