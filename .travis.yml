language: node_js
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-4.8
env:
  global:
    - CXX=g++-4.8
node_js: "10"
jobs:
  include:
    - stage: Tests
      os: linux
      script: npm run test && npm run e2e-test
      node_js: "11"
    - stage:
      os: linux
      script: npm run test && npm run e2e-test
      node_js: "10"
    - stage:
      os: linux
      script: npm run test && npm run e2e-test
      node_js: "8"
    - stage:
      name: test documentation generation
      os: linux
      before_script:
        - npm install
      script:
        - npm run generate-docs

    - stage: Update assets
      name: Documentation
      os: osx
      if: branch = master AND type != pull_request AND !tag
      env:
        - GITHUB_TOKEN=$TRIAGER_BOT_TOKEN
      before_script:
        - brew install hub
        - hub --version
        - git remote set-url origin https://triager:$TRIAGER_BOT_TOKEN@github.com/appium/appium
        - git checkout -b generate-docs-$TRAVIS_COMMIT
        - npm install
      script:
        # Generate the docs
        - npm run generate-docs
        - git add .

        # log the status so we know what is going on, on failure
        - git status -s

        # If docs were generated, make a PR to update the docs
        - |
          if [[ -n $(git status -s) ]]; then
            git commit -a -n -m 'Update generated docs';
            git push origin generate-docs-$TRAVIS_COMMIT;
            hub pull-request -b "appium:master" -h "appium:generate-docs-$TRAVIS_COMMIT" -m "Update auto-generated docs";
          fi
    - stage:
      name: Bundle
      # only want to run this on the main master branch
      if: branch = master AND type != pull_request
      os:
        - osx
        - osx_image: xcode9.4
      env:
        - NODE_ENV=production
        - CC=gcc
        - CXX=g++
      before_install:
        - gcc --version
        - brew upgrade carthage
      install:
        # Install prod dependencies
        - npm install

        # Install only the dev dependencies that we need
        - npm install --only=dev gulp
        - npm install --only=dev appium-gulp-plugins

        # get appium-xcuitest-driver fully built
        - pushd node_modules/appium-xcuitest-driver/WebDriverAgent
        # do not use build script because Travis _will_ have rate limits
        - carthage bootstrap --no-use-binaries
        - cp Cartfile.resolved Carthage
        - mkdir -p ./Resources/WebDriverAgent.bundle
        - popd
      before_script:
        # Build the assets
        - npm run build

        # Remove the dev depenedencies
        - npm prune
      script: npm run zip-and-upload

    - stage: Update appium.io
      if: tag
      os: osx
      env:
        - HUB_VERBOSE=true GITHUB_TOKEN=$TRIAGER_BOT_TOKEN
      before_script:
        - brew install hub
        - pip install mkdocs==0.16.3

        # Checkout appium.io repository
        - git clone https://triager:$TRIAGER_BOT_TOKEN@github.com/appium/appium.io.git --branch=gh-pages && cd appium.io/
        - git checkout -b docs-$TRAVIS_TAG
        - bundle install
        - npm install

      script:
        # Build the docs and make a PR to get them on appium.io
        - npm run build:docs
        - git commit -a -n -m 'Updated docs for latest Appium version'
        - git push origin docs-$TRAVIS_TAG
        - hub pull-request -b "appium:gh-pages" -h "appium:docs-$TRAVIS_TAG" -m "Update documentation for latest version" | exit 0 # The PR command works but always returns non-negative
