name: Appium Build
on:
  push:
    branches:
      - master
      - appium3
    # this list of paths could potentially impact the build
    paths:
      - '**/tsconfig*.json'
      - 'packages/base-driver/static/**/*'
      - 'packages/*/test/**'
      - 'packages/*/bin'
      - 'packages/**/*.ts'
      - 'packages/**/*.json'
      - 'packages/**/*.js'
      - 'package*.json'
      - 'lerna.json'
      - '.npmrc'
      - '.mocharc.js'
      - '.github/workflows/build.yml' # this file
      - '.eslintrc'
      - '.eslintignore'
      - '!**/sample-code/**'
      - '!packages/*/docs/**'
  pull_request:
    branches:
      - master
      - appium3
    paths:
      - '**/tsconfig*.json'
      - 'packages/base-driver/static/**/*'
      - 'packages/*/test/**'
      - 'packages/*/bin'
      - 'packages/**/*.ts'
      - 'packages/**/*.json'
      - 'packages/**/*.js'
      - 'package*.json'
      - 'lerna.json'
      - '.npmrc'
      - '.mocharc.js'
      - '.github/workflows/build.yml' # this file
      - '.eslintrc'
      - '.eslintignore'
      - '!**/sample-code/**'
      - '!packages/*/docs/**'

env:
  CI: true

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  prepare_matrix:
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.generate-matrix.outputs.lts }}
    steps:
    - name: Select all current LTS versions of Node.js
      id: generate-matrix
      uses: msimerson/node-lts-versions@v1

  test-smoke:
    needs:
    - prepare_matrix
    name: Smoke Tests
    strategy:
      matrix:
        node-version: ${{ fromJSON(needs.prepare_matrix.outputs.versions) }}
        os:
        - ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v6
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        uses: bahmutov/npm-install@v1
        with:
          useRollingCache: true
          install-command: npm ci --foreground-scripts
      - name: Build packages
        run: npm run build
      - name: Clear V8 code cache (Node.js 24+ compatibility)
        run: |
          # Clear V8 code cache to avoid bytecode deserialization errors
          # Node.js 24 may have cached bytecode that's incompatible
          if [[ -d "$HOME/.node" ]]; then
            rm -rf "$HOME/.node"/* 2>/dev/null || true
          fi
          if [[ -d "$HOME/.cache/node" ]]; then
            rm -rf "$HOME/.cache/node"/* 2>/dev/null || true
          fi
      - name: Run smoke tests
        run: |
          set -o pipefail
          if command -v stdbuf >/dev/null 2>&1; then
            stdbuf -oL -eL npm run test:smoke
            exit_code=$?
          else
            npm run test:smoke
            exit_code=$?
            sleep 0.1
          fi
          exit $exit_code
        env:
          NODE_OPTIONS: --no-warnings

  test-unit:
    needs:
    - prepare_matrix
    name: Unit Tests
    strategy:
      matrix:
        node-version: ${{ fromJSON(needs.prepare_matrix.outputs.versions) }}
        os:
        - ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v6
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        uses: bahmutov/npm-install@v1
        with:
          useRollingCache: true
          install-command: npm ci --foreground-scripts
      - name: Build packages
        run: npm run build
      - name: Clear V8 code cache (Node.js 24+ compatibility)
        run: |
          # Clear V8 code cache to avoid bytecode deserialization errors
          # Node.js 24 may have cached bytecode that's incompatible
          if [[ -d "$HOME/.node" ]]; then
            rm -rf "$HOME/.node"/* 2>/dev/null || true
          fi
          if [[ -d "$HOME/.cache/node" ]]; then
            rm -rf "$HOME/.cache/node"/* 2>/dev/null || true
          fi
      - name: Run unit tests
        run: |
          set -o pipefail
          if command -v stdbuf >/dev/null 2>&1; then
            stdbuf -oL -eL npm run test:unit
            exit_code=$?
          else
            npm run test:unit
            exit_code=$?
            sleep 0.1
          fi
          exit $exit_code
        env:
          NODE_OPTIONS: --no-warnings

  test-types:
    needs:
    - prepare_matrix
    name: Type Tests
    strategy:
      matrix:
        node-version: ${{ fromJSON(needs.prepare_matrix.outputs.versions) }}
        os:
        - ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v6
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        uses: bahmutov/npm-install@v1
        with:
          useRollingCache: true
          install-command: npm ci --foreground-scripts
      - name: Build packages
        run: npm run build
      - name: Clear V8 code cache (Node.js 24+ compatibility)
        run: |
          # Clear V8 code cache to avoid bytecode deserialization errors
          # Node.js 24 may have cached bytecode that's incompatible
          if [[ -d "$HOME/.node" ]]; then
            rm -rf "$HOME/.node"/* 2>/dev/null || true
          fi
          if [[ -d "$HOME/.cache/node" ]]; then
            rm -rf "$HOME/.cache/node"/* 2>/dev/null || true
          fi
      - name: Run type tests
        run: |
          set -o pipefail
          if command -v stdbuf >/dev/null 2>&1; then
            stdbuf -oL -eL npm run test:types
            exit_code=$?
          else
            npm run test:types
            exit_code=$?
            sleep 0.1
          fi
          exit $exit_code
        env:
          NODE_OPTIONS: --no-warnings

  test-e2e:
    needs:
    - prepare_matrix
    name: E2E Tests
    strategy:
      matrix:
        node-version: ${{ fromJSON(needs.prepare_matrix.outputs.versions) }}
        os:
        - ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v6
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        uses: bahmutov/npm-install@v1
        with:
          useRollingCache: true
          install-command: npm ci --foreground-scripts
      - name: Build packages
        run: npm run build
      - name: Clear V8 code cache (Node.js 24+ compatibility)
        run: |
          # Clear V8 code cache to avoid bytecode deserialization errors
          # Node.js 24 may have cached bytecode that's incompatible
          if [[ -d "$HOME/.node" ]]; then
            rm -rf "$HOME/.node"/* 2>/dev/null || true
          fi
          if [[ -d "$HOME/.cache/node" ]]; then
            rm -rf "$HOME/.cache/node"/* 2>/dev/null || true
          fi
      - name: Run E2E tests
        run: |
          set -o pipefail
          if command -v stdbuf >/dev/null 2>&1; then
            stdbuf -oL -eL npm run test:e2e
            exit_code=$?
          else
            npm run test:e2e
            exit_code=$?
            sleep 0.1
          fi
          exit $exit_code
        env:
          NODE_OPTIONS: --no-warnings

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Install dependencies
        uses: bahmutov/npm-install@v1
        with:
          useRollingCache: true
          install-command: npm ci
      - name: ESLint
        run: npm run lint:ci
